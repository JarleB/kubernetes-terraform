- name: Gather addresses for masters by pinging them
  hosts: master
  tasks:
    - ping:
- name: configure worker nodes
  hosts: worker
  remote_user: root
  become: yes
  vars:
    apiserver_address: http://127.0.0.1:8080
  tasks:
    - name: Create kubernetes manifests folder
      file:
        path: /etc/kubernetes/manifests
        state: directory
        owner: root
        group: root
        mode: 0755
    - name: Configure kube proxy
      template:
        src: workers/templates/kube-proxy.yaml
        dest: /etc/kubernetes/manifests/kube-proxy.yaml
        owner: core
        group: core
        mode: 0644
    - name: Configure haproxy apiserver
      copy:
        src: workers/files/haproxy-apiserver.yaml
        dest: /etc/kubernetes/manifests/haproxy-apiserver.yaml
        owner: core
        group: core
        mode: 0644
    - name: Configure haproxy apiserver
      template:
        src: workers/templates/haproxy-apiserver.cfg
        dest: /etc/kubernetes/haproxy-apiserver.cfg
        owner: core
        group: core
        mode: 0644
    - name: Add kubeconfig
      template:
        dest: /etc/kubernetes/kubeconfig.yaml
        src: workers/templates/kubeconfig.yaml
        owner: root
        group: root
        mode: 0644
    - name: Configure kubelet
      template:
        dest: /etc/systemd/system/kubelet.service
        src: workers/templates/kubelet.service
        owner: root
        group: root
        mode: 0644
      notify:
        - reload systemd
        - restart kubelet
    - name: run docker
      service: name=docker state=started enabled=yes
    - name: run kubelet
      service: name=kubelet state=started enabled=yes
  handlers:
    - name: reload systemd
      command: systemctl daemon-reload
    - name: restart systemd-networkd
      service: name=systemd-networkd state=restarted
    - name: restart kubelet
      service: name=kubelet state=restarted
